@model IEnumerable<HRmangmentSystem.Models.Attendance>
@{
    Layout = "EmployeeDashbord";
}
@{
    ViewData["Title"] = "Attendance Tracker";
}

<h2>Attendance Tracker</h2>

<!-- Punch In & Punch Out Buttons -->
<button id="punchInBtn" class="btn btn-success">Punch In</button>
<button id="punchOutBtn" class="btn btn-danger" disabled>Punch Out</button>

<table class="table table-striped mt-3">
    <thead>
        <tr>
            <th>Date</th>
            <th>Employee ID</th>
            <th>Punch In Time</th>
            <th>Punch Out Time</th>
            <th>Working Hours</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Date?.ToString("yyyy-MM-dd")</td>
                    <td>@item.EmployeeId</td>
                    <td>@(item.PunchIn.HasValue ? item.PunchIn.Value.ToString("hh\\:mm\\:ss") : "---")</td>
                    <td>@(item.PunchOut.HasValue ? item.PunchOut.Value.ToString("hh\\:mm\\:ss") : "---")</td>
                    <td>@(item.Hours.HasValue ? $"{item.Hours.Value.Hour} H : {item.Hours.Value.Minute} m   : {item.Hours.Value.Second}S" : "N/A")</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No attendance records found.</td>
            </tr>
        }
    </tbody>
</table>
<script>
    document.getElementById("punchInBtn").addEventListener("click", function () {
        fetch("/Employee/PunchIn", { method: "POST" }) // Removed hardcoded ID
            .then(response => {
                document.getElementById("punchInBtn").disabled = true; // Disable Punch In
                document.getElementById("punchOutBtn").disabled = false; // Enable Punch Out
                location.reload();
            });
    });

    document.getElementById("punchOutBtn").addEventListener("click", function () {
        fetch("/Employee/PunchOut", { method: "POST" }) // Removed hardcoded ID
            .then(response => {
                document.getElementById("punchOutBtn").disabled = true; // Disable Punch Out
                document.getElementById("punchInBtn").disabled = false; // Enable Punch In
                location.reload();
            });
    });

    window.onload = function () {
        var rows = document.querySelectorAll("tbody tr");
        if (rows.length > 0) { // Ensure at least one row of data exists
            var lastRow = rows[rows.length - 1]; // Get the last row (latest entry)
            var punchInTime = lastRow.cells[2].innerText.trim();
            var punchOutTime = lastRow.cells[3].innerText.trim();

            console.log("Punch In Time: " + punchInTime);
            console.log("Punch Out Time: " + punchOutTime);

            if (punchInTime !== "---" && punchOutTime === "---") {
                document.getElementById("punchInBtn").disabled = true; // Disable Punch In
                document.getElementById("punchOutBtn").disabled = false; // Enable Punch Out
            } else if (punchInTime !== "---" && punchOutTime !== "---") {
                document.getElementById("punchInBtn").disabled = true; // Disable Punch In
                document.getElementById("punchOutBtn").disabled = true; // Disable Punch Out
            } else {
                document.getElementById("punchInBtn").disabled = false; // Enable Punch In
                document.getElementById("punchOutBtn").disabled = true; // Disable Punch Out
            }
        } else {
            // If no records exist, enable Punch In and disable Punch Out
            document.getElementById("punchInBtn").disabled = false;
            document.getElementById("punchOutBtn").disabled = true;
        }
    };

    document.getElementById("punchInBtn").addEventListener("click", function () {
        fetch("/Employee/PunchIn", { method: "POST" })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Punched In!',
                        text: 'Your punch-in time has been recorded.',
                        confirmButtonColor: '#743DB5',
                        timer: 2000
                    }).then(() => {
                        document.getElementById("punchInBtn").disabled = true;
                        document.getElementById("punchOutBtn").disabled = false;
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: data.message,
                        confirmButtonColor: '#743DB5'
                    });
                }
            });
    });

    document.getElementById("punchOutBtn").addEventListener("click", function () {
        fetch("/Employee/PunchOut", { method: "POST" })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Punched Out!',
                        text: 'Your punch-out time has been recorded.',
                        confirmButtonColor: '#743DB5',
                        timer: 2000
                    }).then(() => {
                        document.getElementById("punchOutBtn").disabled = true;
                        document.getElementById("punchInBtn").disabled = true;
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: data.message,
                        confirmButtonColor: '#743DB5'
                    });
                }
            });
    });
    };
</script>

